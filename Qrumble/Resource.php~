<?php

class Resource {


	/*************************************************************************
	  ATTRIBUTES                   
	 *************************************************************************/
	public $extensions = array( 'php', 'md' );
	public $type;
	public $name;


	/*************************************************************************
	  CONSTRUCTOR                   
	 *************************************************************************/
	public function __construct( $type, $name ) {
		$this->type = $type;
		$this->name = $name;
	}


	/*************************************************************************
	  PUBLIC                   
	 *************************************************************************/
	public function get_file_path( $root_folders ) {
		foreach ( $root_folders as $root_folder ) {
			foreach ( $this->extensions as $extension ) {
				$absolute_file_path = $root_folder . 'data/' . $this->type . '/' . $this->name . '.' . $extension;
				if ( file_exists( $absolute_file_path ) ) {
					return $absolute_file_path;
				}
			}
		}
		$unknown_resource = $this->unknown_resource( );
		if ( $this->equals( $unknown_resource ) ) {
			throw new Exception( 'The unknown resource is not found' );
		}
		return $unknown_resource->get_file_path( $root_folders );
	}
	public function is_unknown_resource( ) {
		return $this->equals( $this->unknown_resource( ) );
	}
	public function equals( $reference ) {
		return ( get_class( $reference ) == 'Resource' && $this->type == $reference->type && $this->name == $reference->name );
	}


	/*************************************************************************
	  STATIC                   
	 *************************************************************************/
	static function unknown_resource( ) {
		return new Resource( 'page', '404' );
	}

}

?>
